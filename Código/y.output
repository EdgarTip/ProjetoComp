Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: VarDeclaration SEMICOLON Declarations
    3             | FuncDeclaration SEMICOLON Declarations
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 VarSpec: ID CommaId Type

    8 CommaId: COMMA ID CommaId
    9        | %empty

   10 Type: INT
   11     | FLOAT32
   12     | BOOL
   13     | STRING

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody
   15                | FUNC ID LPAR RPAR Type FuncBody
   16                | FUNC ID LPAR Parameters RPAR FuncBody
   17                | FUNC ID LPAR RPAR FuncBody

   18 Parameters: ID Type
   19           | ID Type COMMA Parameters

   20 FuncBody: LBRACE VarsAndStatements RBRACE

   21 VarsAndStatements: VarsAndStatements VarsAndStatementsOpc SEMICOLON
   22                  | %empty

   23 VarsAndStatementsOpc: VarDeclaration
   24                     | Statement
   25                     | %empty

   26 Statement: ID ASSIGN Expr
   27          | LBRACE StatementSEMICOLON RBRACE
   28          | IF Expr LBRACE StatementSEMICOLON RBRACE ElseLBraceStatementRbraceOpc
   29          | FOR ExprOpc LBRACE StatementSEMICOLON RBRACE
   30          | RETURN ExprOpc
   31          | FuncInvocation
   32          | ParseArgs
   33          | PRINT LPAR ExprSTRLITOpc RPAR

   34 ExprSTRLITOpc: Expr
   35              | STRLIT

   36 ExprOpc: Expr
   37        | %empty

   38 ElseLBraceStatementRbraceOpc: ELSE LBRACE StatementSEMICOLON RBRACE
   39                             | %empty

   40 StatementSEMICOLON: Statement SEMICOLON StatementSEMICOLON
   41                   | %empty

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

   43 FuncInvocation: ID LPAR OpcExpr RPAR

   44 OpcExpr: Expr CommaExpr
   45        | %empty

   46 CommaExpr: COMMA Expr CommaExpr
   47          | %empty

   48 Expr: Expr OR Expr
   49     | Expr AND Expr
   50     | Expr LT Expr
   51     | Expr GT Expr
   52     | Expr EQ Expr
   53     | Expr NE Expr
   54     | Expr LE Expr
   55     | Expr GE Expr
   56     | Expr PLUS Expr
   57     | Expr MINUS Expr
   58     | Expr STAR Expr
   59     | Expr DIV Expr
   60     | Expr MOD Expr
   61     | MINUS Expr
   62     | PLUS Expr
   63     | NOT Expr
   64     | INTLIT
   65     | REALLIT
   66     | ID
   67     | FuncInvocation
   68     | LPAR Expr RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    PACKAGE (258) 1
    ID (259) 1 7 8 14 15 16 17 18 19 26 42 43 66
    SEMICOLON (260) 1 2 3 6 21 40
    VAR (261) 5 6
    LPAR (262) 6 14 15 16 17 33 42 43 68
    RPAR (263) 6 14 15 16 17 33 42 43 68
    COMMA (264) 8 19 42 46
    INT (265) 10
    FLOAT32 (266) 11
    BOOL (267) 12
    STRING (268) 13
    FUNC (269) 14 15 16 17
    LBRACE (270) 20 27 28 29 38
    RBRACE (271) 20 27 28 29 38
    RETURN (272) 30
    PRINT (273) 33
    STRLIT (274) 35
    ASSIGN (275) 26 42
    BLANKID (276) 42
    PARSEINT (277) 42
    CMDARGS (278) 42
    LSQ (279) 42
    RSQ (280) 42
    OR (281) 48
    AND (282) 49
    LT (283) 50
    GT (284) 51
    EQ (285) 52
    NE (286) 53
    LE (287) 54
    GE (288) 55
    PLUS (289) 56 62
    MINUS (290) 57 61
    STAR (291) 58
    DIV (292) 59
    MOD (293) 60
    NOT (294) 63
    INTLIT (295) 64
    REALLIT (296) 65
    ELSE (297) 38
    IF (298) 28
    FOR (299) 29


Nonterminals, with rules where they appear

    $accept (45)
        on left: 0
    Program (46)
        on left: 1
        on right: 0
    Declarations (47)
        on left: 2 3 4
        on right: 1 2 3
    VarDeclaration (48)
        on left: 5 6
        on right: 2 23
    VarSpec (49)
        on left: 7
        on right: 5 6
    CommaId (50)
        on left: 8 9
        on right: 7 8
    Type (51)
        on left: 10 11 12 13
        on right: 7 14 15 18 19
    FuncDeclaration (52)
        on left: 14 15 16 17
        on right: 3
    Parameters (53)
        on left: 18 19
        on right: 14 16 19
    FuncBody (54)
        on left: 20
        on right: 14 15 16 17
    VarsAndStatements (55)
        on left: 21 22
        on right: 20 21
    VarsAndStatementsOpc (56)
        on left: 23 24 25
        on right: 21
    Statement (57)
        on left: 26 27 28 29 30 31 32 33
        on right: 24 40
    ExprSTRLITOpc (58)
        on left: 34 35
        on right: 33
    ExprOpc (59)
        on left: 36 37
        on right: 29 30
    ElseLBraceStatementRbraceOpc (60)
        on left: 38 39
        on right: 28
    StatementSEMICOLON (61)
        on left: 40 41
        on right: 27 28 29 38 40
    ParseArgs (62)
        on left: 42
        on right: 32
    FuncInvocation (63)
        on left: 43
        on right: 31 67
    OpcExpr (64)
        on left: 44 45
        on right: 43
    CommaExpr (65)
        on left: 46 47
        on right: 44 46
    Expr (66)
        on left: 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68
        on right: 26 28 34 36 42 44 46 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 68


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 8
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 6

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec  go to state 13


State 7

   14 FuncDeclaration: FUNC . ID LPAR Parameters RPAR Type FuncBody
   15                | FUNC . ID LPAR RPAR Type FuncBody
   16                | FUNC . ID LPAR Parameters RPAR FuncBody
   17                | FUNC . ID LPAR RPAR FuncBody

    ID  shift, and go to state 14


State 8

    1 Program: PACKAGE ID SEMICOLON Declarations .

    $default  reduce using rule 1 (Program)


State 9

    2 Declarations: VarDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 15


State 10

    3 Declarations: FuncDeclaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 11

    7 VarSpec: ID . CommaId Type

    COMMA  shift, and go to state 17

    $default  reduce using rule 9 (CommaId)

    CommaId  go to state 18


State 12

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 19


State 13

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 14

   14 FuncDeclaration: FUNC ID . LPAR Parameters RPAR Type FuncBody
   15                | FUNC ID . LPAR RPAR Type FuncBody
   16                | FUNC ID . LPAR Parameters RPAR FuncBody
   17                | FUNC ID . LPAR RPAR FuncBody

    LPAR  shift, and go to state 20


State 15

    2 Declarations: VarDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 21
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 16

    3 Declarations: FuncDeclaration SEMICOLON . Declarations

    VAR   shift, and go to state 6
    FUNC  shift, and go to state 7

    $default  reduce using rule 4 (Declarations)

    Declarations     go to state 22
    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 17

    8 CommaId: COMMA . ID CommaId

    ID  shift, and go to state 23


State 18

    7 VarSpec: ID CommaId . Type

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 28


State 19

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 29


State 20

   14 FuncDeclaration: FUNC ID LPAR . Parameters RPAR Type FuncBody
   15                | FUNC ID LPAR . RPAR Type FuncBody
   16                | FUNC ID LPAR . Parameters RPAR FuncBody
   17                | FUNC ID LPAR . RPAR FuncBody

    ID    shift, and go to state 30
    RPAR  shift, and go to state 31

    Parameters  go to state 32


State 21

    2 Declarations: VarDeclaration SEMICOLON Declarations .

    $default  reduce using rule 2 (Declarations)


State 22

    3 Declarations: FuncDeclaration SEMICOLON Declarations .

    $default  reduce using rule 3 (Declarations)


State 23

    8 CommaId: COMMA ID . CommaId

    COMMA  shift, and go to state 17

    $default  reduce using rule 9 (CommaId)

    CommaId  go to state 33


State 24

   10 Type: INT .

    $default  reduce using rule 10 (Type)


State 25

   11 Type: FLOAT32 .

    $default  reduce using rule 11 (Type)


State 26

   12 Type: BOOL .

    $default  reduce using rule 12 (Type)


State 27

   13 Type: STRING .

    $default  reduce using rule 13 (Type)


State 28

    7 VarSpec: ID CommaId Type .

    $default  reduce using rule 7 (VarSpec)


State 29

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 34


State 30

   18 Parameters: ID . Type
   19           | ID . Type COMMA Parameters

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27

    Type  go to state 35


State 31

   15 FuncDeclaration: FUNC ID LPAR RPAR . Type FuncBody
   17                | FUNC ID LPAR RPAR . FuncBody

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27
    LBRACE   shift, and go to state 36

    Type      go to state 37
    FuncBody  go to state 38


State 32

   14 FuncDeclaration: FUNC ID LPAR Parameters . RPAR Type FuncBody
   16                | FUNC ID LPAR Parameters . RPAR FuncBody

    RPAR  shift, and go to state 39


State 33

    8 CommaId: COMMA ID CommaId .

    $default  reduce using rule 8 (CommaId)


State 34

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 35

   18 Parameters: ID Type .
   19           | ID Type . COMMA Parameters

    COMMA  shift, and go to state 40

    $default  reduce using rule 18 (Parameters)


State 36

   20 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 22 (VarsAndStatements)

    VarsAndStatements  go to state 41


State 37

   15 FuncDeclaration: FUNC ID LPAR RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 42


State 38

   17 FuncDeclaration: FUNC ID LPAR RPAR FuncBody .

    $default  reduce using rule 17 (FuncDeclaration)


State 39

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR . Type FuncBody
   16                | FUNC ID LPAR Parameters RPAR . FuncBody

    INT      shift, and go to state 24
    FLOAT32  shift, and go to state 25
    BOOL     shift, and go to state 26
    STRING   shift, and go to state 27
    LBRACE   shift, and go to state 36

    Type      go to state 43
    FuncBody  go to state 44


State 40

   19 Parameters: ID Type COMMA . Parameters

    ID  shift, and go to state 30

    Parameters  go to state 45


State 41

   20 FuncBody: LBRACE VarsAndStatements . RBRACE
   21 VarsAndStatements: VarsAndStatements . VarsAndStatementsOpc SEMICOLON

    ID      shift, and go to state 46
    VAR     shift, and go to state 6
    LBRACE  shift, and go to state 47
    RBRACE  shift, and go to state 48
    RETURN  shift, and go to state 49
    PRINT   shift, and go to state 50
    IF      shift, and go to state 51
    FOR     shift, and go to state 52

    $default  reduce using rule 25 (VarsAndStatementsOpc)

    VarDeclaration        go to state 53
    VarsAndStatementsOpc  go to state 54
    Statement             go to state 55
    ParseArgs             go to state 56
    FuncInvocation        go to state 57


State 42

   15 FuncDeclaration: FUNC ID LPAR RPAR Type FuncBody .

    $default  reduce using rule 15 (FuncDeclaration)


State 43

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type . FuncBody

    LBRACE  shift, and go to state 36

    FuncBody  go to state 58


State 44

   16 FuncDeclaration: FUNC ID LPAR Parameters RPAR FuncBody .

    $default  reduce using rule 16 (FuncDeclaration)


State 45

   19 Parameters: ID Type COMMA Parameters .

    $default  reduce using rule 19 (Parameters)


State 46

   26 Statement: ID . ASSIGN Expr
   42 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   43 FuncInvocation: ID . LPAR OpcExpr RPAR

    LPAR    shift, and go to state 59
    COMMA   shift, and go to state 60
    ASSIGN  shift, and go to state 61


State 47

   27 Statement: LBRACE . StatementSEMICOLON RBRACE

    ID      shift, and go to state 46
    LBRACE  shift, and go to state 47
    RETURN  shift, and go to state 49
    PRINT   shift, and go to state 50
    IF      shift, and go to state 51
    FOR     shift, and go to state 52

    $default  reduce using rule 41 (StatementSEMICOLON)

    Statement           go to state 62
    StatementSEMICOLON  go to state 63
    ParseArgs           go to state 56
    FuncInvocation      go to state 57


State 48

   20 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 20 (FuncBody)


State 49

   30 Statement: RETURN . ExprOpc

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    $default  reduce using rule 37 (ExprOpc)

    ExprOpc         go to state 71
    FuncInvocation  go to state 72
    Expr            go to state 73


State 50

   33 Statement: PRINT . LPAR ExprSTRLITOpc RPAR

    LPAR  shift, and go to state 74


State 51

   28 Statement: IF . Expr LBRACE StatementSEMICOLON RBRACE ElseLBraceStatementRbraceOpc

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 75


State 52

   29 Statement: FOR . ExprOpc LBRACE StatementSEMICOLON RBRACE

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    $default  reduce using rule 37 (ExprOpc)

    ExprOpc         go to state 76
    FuncInvocation  go to state 72
    Expr            go to state 73


State 53

   23 VarsAndStatementsOpc: VarDeclaration .

    $default  reduce using rule 23 (VarsAndStatementsOpc)


State 54

   21 VarsAndStatements: VarsAndStatements VarsAndStatementsOpc . SEMICOLON

    SEMICOLON  shift, and go to state 77


State 55

   24 VarsAndStatementsOpc: Statement .

    $default  reduce using rule 24 (VarsAndStatementsOpc)


State 56

   32 Statement: ParseArgs .

    $default  reduce using rule 32 (Statement)


State 57

   31 Statement: FuncInvocation .

    $default  reduce using rule 31 (Statement)


State 58

   14 FuncDeclaration: FUNC ID LPAR Parameters RPAR Type FuncBody .

    $default  reduce using rule 14 (FuncDeclaration)


State 59

   43 FuncInvocation: ID LPAR . OpcExpr RPAR

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    $default  reduce using rule 45 (OpcExpr)

    FuncInvocation  go to state 72
    OpcExpr         go to state 78
    Expr            go to state 79


State 60

   42 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    BLANKID  shift, and go to state 80


State 61

   26 Statement: ID ASSIGN . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 81


State 62

   40 StatementSEMICOLON: Statement . SEMICOLON StatementSEMICOLON

    SEMICOLON  shift, and go to state 82


State 63

   27 Statement: LBRACE StatementSEMICOLON . RBRACE

    RBRACE  shift, and go to state 83


State 64

   43 FuncInvocation: ID . LPAR OpcExpr RPAR
   66 Expr: ID .

    LPAR  shift, and go to state 59

    $default  reduce using rule 66 (Expr)


State 65

   68 Expr: LPAR . Expr RPAR

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 84


State 66

   62 Expr: PLUS . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 85


State 67

   61 Expr: MINUS . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 86


State 68

   63 Expr: NOT . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 87


State 69

   64 Expr: INTLIT .

    $default  reduce using rule 64 (Expr)


State 70

   65 Expr: REALLIT .

    $default  reduce using rule 65 (Expr)


State 71

   30 Statement: RETURN ExprOpc .

    $default  reduce using rule 30 (Statement)


State 72

   67 Expr: FuncInvocation .

    $default  reduce using rule 67 (Expr)


State 73

   36 ExprOpc: Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 36 (ExprOpc)


State 74

   33 Statement: PRINT LPAR . ExprSTRLITOpc RPAR

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    STRLIT   shift, and go to state 101
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    ExprSTRLITOpc   go to state 102
    FuncInvocation  go to state 72
    Expr            go to state 103


State 75

   28 Statement: IF Expr . LBRACE StatementSEMICOLON RBRACE ElseLBraceStatementRbraceOpc
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LBRACE  shift, and go to state 104
    OR      shift, and go to state 88
    AND     shift, and go to state 89
    LT      shift, and go to state 90
    GT      shift, and go to state 91
    EQ      shift, and go to state 92
    NE      shift, and go to state 93
    LE      shift, and go to state 94
    GE      shift, and go to state 95
    PLUS    shift, and go to state 96
    MINUS   shift, and go to state 97
    STAR    shift, and go to state 98
    DIV     shift, and go to state 99
    MOD     shift, and go to state 100


State 76

   29 Statement: FOR ExprOpc . LBRACE StatementSEMICOLON RBRACE

    LBRACE  shift, and go to state 105


State 77

   21 VarsAndStatements: VarsAndStatements VarsAndStatementsOpc SEMICOLON .

    $default  reduce using rule 21 (VarsAndStatements)


State 78

   43 FuncInvocation: ID LPAR OpcExpr . RPAR

    RPAR  shift, and go to state 106


State 79

   44 OpcExpr: Expr . CommaExpr
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    COMMA  shift, and go to state 107
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 47 (CommaExpr)

    CommaExpr  go to state 108


State 80

   42 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    ASSIGN  shift, and go to state 109


State 81

   26 Statement: ID ASSIGN Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 26 (Statement)


State 82

   40 StatementSEMICOLON: Statement SEMICOLON . StatementSEMICOLON

    ID      shift, and go to state 46
    LBRACE  shift, and go to state 47
    RETURN  shift, and go to state 49
    PRINT   shift, and go to state 50
    IF      shift, and go to state 51
    FOR     shift, and go to state 52

    $default  reduce using rule 41 (StatementSEMICOLON)

    Statement           go to state 62
    StatementSEMICOLON  go to state 110
    ParseArgs           go to state 56
    FuncInvocation      go to state 57


State 83

   27 Statement: LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 27 (Statement)


State 84

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   68     | LPAR Expr . RPAR

    RPAR   shift, and go to state 111
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 85

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   62     | PLUS Expr .

    OR    shift, and go to state 88
    AND   shift, and go to state 89
    LT    shift, and go to state 90
    GT    shift, and go to state 91
    EQ    shift, and go to state 92
    NE    shift, and go to state 93
    LE    shift, and go to state 94
    GE    shift, and go to state 95
    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 62 (Expr)


State 86

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   61     | MINUS Expr .

    OR    shift, and go to state 88
    AND   shift, and go to state 89
    LT    shift, and go to state 90
    GT    shift, and go to state 91
    EQ    shift, and go to state 92
    NE    shift, and go to state 93
    LE    shift, and go to state 94
    GE    shift, and go to state 95
    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 61 (Expr)


State 87

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   63     | NOT Expr .

    OR   shift, and go to state 88
    AND  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    EQ   shift, and go to state 92
    NE   shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95

    $default  reduce using rule 63 (Expr)


State 88

   48 Expr: Expr OR . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 112


State 89

   49 Expr: Expr AND . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 113


State 90

   50 Expr: Expr LT . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 114


State 91

   51 Expr: Expr GT . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 115


State 92

   52 Expr: Expr EQ . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 116


State 93

   53 Expr: Expr NE . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 117


State 94

   54 Expr: Expr LE . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 118


State 95

   55 Expr: Expr GE . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 119


State 96

   56 Expr: Expr PLUS . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 120


State 97

   57 Expr: Expr MINUS . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 121


State 98

   58 Expr: Expr STAR . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 122


State 99

   59 Expr: Expr DIV . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 123


State 100

   60 Expr: Expr MOD . Expr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 124


State 101

   35 ExprSTRLITOpc: STRLIT .

    $default  reduce using rule 35 (ExprSTRLITOpc)


State 102

   33 Statement: PRINT LPAR ExprSTRLITOpc . RPAR

    RPAR  shift, and go to state 125


State 103

   34 ExprSTRLITOpc: Expr .
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 34 (ExprSTRLITOpc)


State 104

   28 Statement: IF Expr LBRACE . StatementSEMICOLON RBRACE ElseLBraceStatementRbraceOpc

    ID      shift, and go to state 46
    LBRACE  shift, and go to state 47
    RETURN  shift, and go to state 49
    PRINT   shift, and go to state 50
    IF      shift, and go to state 51
    FOR     shift, and go to state 52

    $default  reduce using rule 41 (StatementSEMICOLON)

    Statement           go to state 62
    StatementSEMICOLON  go to state 126
    ParseArgs           go to state 56
    FuncInvocation      go to state 57


State 105

   29 Statement: FOR ExprOpc LBRACE . StatementSEMICOLON RBRACE

    ID      shift, and go to state 46
    LBRACE  shift, and go to state 47
    RETURN  shift, and go to state 49
    PRINT   shift, and go to state 50
    IF      shift, and go to state 51
    FOR     shift, and go to state 52

    $default  reduce using rule 41 (StatementSEMICOLON)

    Statement           go to state 62
    StatementSEMICOLON  go to state 127
    ParseArgs           go to state 56
    FuncInvocation      go to state 57


State 106

   43 FuncInvocation: ID LPAR OpcExpr RPAR .

    $default  reduce using rule 43 (FuncInvocation)


State 107

   46 CommaExpr: COMMA . Expr CommaExpr

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 128


State 108

   44 OpcExpr: Expr CommaExpr .

    $default  reduce using rule 44 (OpcExpr)


State 109

   42 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    PARSEINT  shift, and go to state 129


State 110

   40 StatementSEMICOLON: Statement SEMICOLON StatementSEMICOLON .

    $default  reduce using rule 40 (StatementSEMICOLON)


State 111

   68 Expr: LPAR Expr RPAR .

    $default  reduce using rule 68 (Expr)


State 112

   48 Expr: Expr . OR Expr
   48     | Expr OR Expr .
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR   shift, and go to state 88
    AND  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    EQ   shift, and go to state 92
    NE   shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95

    $default  reduce using rule 48 (Expr)


State 113

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   49     | Expr AND Expr .
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR   shift, and go to state 88
    AND  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    EQ   shift, and go to state 92
    NE   shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95

    $default  reduce using rule 49 (Expr)


State 114

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   50     | Expr LT Expr .
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT  shift, and go to state 90
    GT  shift, and go to state 91
    EQ  shift, and go to state 92
    NE  shift, and go to state 93
    LE  shift, and go to state 94
    GE  shift, and go to state 95

    $default  reduce using rule 50 (Expr)


State 115

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   51     | Expr GT Expr .
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT  shift, and go to state 90
    GT  shift, and go to state 91
    EQ  shift, and go to state 92
    NE  shift, and go to state 93
    LE  shift, and go to state 94
    GE  shift, and go to state 95

    $default  reduce using rule 51 (Expr)


State 116

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   52     | Expr EQ Expr .
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT  shift, and go to state 90
    GT  shift, and go to state 91
    EQ  shift, and go to state 92
    NE  shift, and go to state 93
    LE  shift, and go to state 94
    GE  shift, and go to state 95

    $default  reduce using rule 52 (Expr)


State 117

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   53     | Expr NE Expr .
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT  shift, and go to state 90
    GT  shift, and go to state 91
    EQ  shift, and go to state 92
    NE  shift, and go to state 93
    LE  shift, and go to state 94
    GE  shift, and go to state 95

    $default  reduce using rule 53 (Expr)


State 118

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   54     | Expr LE Expr .
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT  shift, and go to state 90
    GT  shift, and go to state 91
    EQ  shift, and go to state 92
    NE  shift, and go to state 93
    LE  shift, and go to state 94
    GE  shift, and go to state 95

    $default  reduce using rule 54 (Expr)


State 119

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   55     | Expr GE Expr .
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    LT  shift, and go to state 90
    GT  shift, and go to state 91
    EQ  shift, and go to state 92
    NE  shift, and go to state 93
    LE  shift, and go to state 94
    GE  shift, and go to state 95

    $default  reduce using rule 55 (Expr)


State 120

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   56     | Expr PLUS Expr .
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR    shift, and go to state 88
    AND   shift, and go to state 89
    LT    shift, and go to state 90
    GT    shift, and go to state 91
    EQ    shift, and go to state 92
    NE    shift, and go to state 93
    LE    shift, and go to state 94
    GE    shift, and go to state 95
    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 56 (Expr)


State 121

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   57     | Expr MINUS Expr .
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR    shift, and go to state 88
    AND   shift, and go to state 89
    LT    shift, and go to state 90
    GT    shift, and go to state 91
    EQ    shift, and go to state 92
    NE    shift, and go to state 93
    LE    shift, and go to state 94
    GE    shift, and go to state 95
    STAR  shift, and go to state 98
    DIV   shift, and go to state 99
    MOD   shift, and go to state 100

    $default  reduce using rule 57 (Expr)


State 122

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   58     | Expr STAR Expr .
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    OR   shift, and go to state 88
    AND  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    EQ   shift, and go to state 92
    NE   shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95

    $default  reduce using rule 58 (Expr)


State 123

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   59     | Expr DIV Expr .
   60     | Expr . MOD Expr

    OR   shift, and go to state 88
    AND  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    EQ   shift, and go to state 92
    NE   shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95

    $default  reduce using rule 59 (Expr)


State 124

   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr
   60     | Expr MOD Expr .

    OR   shift, and go to state 88
    AND  shift, and go to state 89
    LT   shift, and go to state 90
    GT   shift, and go to state 91
    EQ   shift, and go to state 92
    NE   shift, and go to state 93
    LE   shift, and go to state 94
    GE   shift, and go to state 95

    $default  reduce using rule 60 (Expr)


State 125

   33 Statement: PRINT LPAR ExprSTRLITOpc RPAR .

    $default  reduce using rule 33 (Statement)


State 126

   28 Statement: IF Expr LBRACE StatementSEMICOLON . RBRACE ElseLBraceStatementRbraceOpc

    RBRACE  shift, and go to state 130


State 127

   29 Statement: FOR ExprOpc LBRACE StatementSEMICOLON . RBRACE

    RBRACE  shift, and go to state 131


State 128

   46 CommaExpr: COMMA Expr . CommaExpr
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    COMMA  shift, and go to state 107
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100

    $default  reduce using rule 47 (CommaExpr)

    CommaExpr  go to state 132


State 129

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 133


State 130

   28 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE . ElseLBraceStatementRbraceOpc

    ELSE  shift, and go to state 134

    $default  reduce using rule 39 (ElseLBraceStatementRbraceOpc)

    ElseLBraceStatementRbraceOpc  go to state 135


State 131

   29 Statement: FOR ExprOpc LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 29 (Statement)


State 132

   46 CommaExpr: COMMA Expr CommaExpr .

    $default  reduce using rule 46 (CommaExpr)


State 133

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR

    CMDARGS  shift, and go to state 136


State 134

   38 ElseLBraceStatementRbraceOpc: ELSE . LBRACE StatementSEMICOLON RBRACE

    LBRACE  shift, and go to state 137


State 135

   28 Statement: IF Expr LBRACE StatementSEMICOLON RBRACE ElseLBraceStatementRbraceOpc .

    $default  reduce using rule 28 (Statement)


State 136

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 138


State 137

   38 ElseLBraceStatementRbraceOpc: ELSE LBRACE . StatementSEMICOLON RBRACE

    ID      shift, and go to state 46
    LBRACE  shift, and go to state 47
    RETURN  shift, and go to state 49
    PRINT   shift, and go to state 50
    IF      shift, and go to state 51
    FOR     shift, and go to state 52

    $default  reduce using rule 41 (StatementSEMICOLON)

    Statement           go to state 62
    StatementSEMICOLON  go to state 139
    ParseArgs           go to state 56
    FuncInvocation      go to state 57


State 138

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    ID       shift, and go to state 64
    LPAR     shift, and go to state 65
    PLUS     shift, and go to state 66
    MINUS    shift, and go to state 67
    NOT      shift, and go to state 68
    INTLIT   shift, and go to state 69
    REALLIT  shift, and go to state 70

    FuncInvocation  go to state 72
    Expr            go to state 140


State 139

   38 ElseLBraceStatementRbraceOpc: ELSE LBRACE StatementSEMICOLON . RBRACE

    RBRACE  shift, and go to state 141


State 140

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   48 Expr: Expr . OR Expr
   49     | Expr . AND Expr
   50     | Expr . LT Expr
   51     | Expr . GT Expr
   52     | Expr . EQ Expr
   53     | Expr . NE Expr
   54     | Expr . LE Expr
   55     | Expr . GE Expr
   56     | Expr . PLUS Expr
   57     | Expr . MINUS Expr
   58     | Expr . STAR Expr
   59     | Expr . DIV Expr
   60     | Expr . MOD Expr

    RSQ    shift, and go to state 142
    OR     shift, and go to state 88
    AND    shift, and go to state 89
    LT     shift, and go to state 90
    GT     shift, and go to state 91
    EQ     shift, and go to state 92
    NE     shift, and go to state 93
    LE     shift, and go to state 94
    GE     shift, and go to state 95
    PLUS   shift, and go to state 96
    MINUS  shift, and go to state 97
    STAR   shift, and go to state 98
    DIV    shift, and go to state 99
    MOD    shift, and go to state 100


State 141

   38 ElseLBraceStatementRbraceOpc: ELSE LBRACE StatementSEMICOLON RBRACE .

    $default  reduce using rule 38 (ElseLBraceStatementRbraceOpc)


State 142

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 143


State 143

   42 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 42 (ParseArgs)
